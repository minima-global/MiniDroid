package org.minima.system.network.minidapps.minihub.hexdata;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import org.minima.objects.base.MiniData;

public class indexhtml {
	//FILE SIZE 3009
	//HEX NUM 4
	public final static int HEXNUM = 4;
	public final static byte[][] HEXDATA = new byte[4][];
	public static byte[] FINAL_ARRAY = null;
	static {
	//0 - 1000
	HEXDATA[0] = new MiniData("0x3C68746D6C3E0A3C686561643E0A0A093C6C696E6B2072656C3D227374796C6573686565742220747970653D22746578742F6373732220687265663D226D696E6964617070732E637373223E0A202020203C212D2D20203C73637269707420747970653D22746578742F6A61766173637269707422207372633D226D696E696D612E6A73223E3C2F7363726970743E202D2D3E0A093C212D2D20203C6D657461206E616D653D2276696577706F72742220636F6E74656E743D2277696474683D3730302C20696E697469616C2D7363616C653D312C206D6178696D756D2D7363616C653D31223E202D2D3E0A0A093C6D657461206E616D653D2276696577706F72742220636F6E74656E743D2277696474683D6465766963652D77696474682C20696E697469616C2D7363616C653D312E302C206D6178696D756D2D7363616C653D31223E0A0A093C7469746C653E4D494E4944415050533C2F7469746C653E0A0A3C2F686561643E0A0A3C626F6479207374796C653D226261636B67726F756E642D696D6167653A2075726C2874696C652D677265792E6A706567293B223E0A0A3C73637269707420747970653D22746578742F6A617661736372697074223E0A0A092F2F5761697420666F7220746865207061676520746F206C6F61642E2E0A0977696E646F772E6164644576656E744C697374656E657228226C6F6164222C2066756E6374696F6E28297B0A0909636F6E737420696E707574456C656D656E74203D20646F63756D656E742E676574456C656D656E7442794964282266696C652D696E70757422293B0A0909696E707574456C656D656E742E6164644576656E744C697374656E657228226368616E6765222C2068616E646C6546696C65732C2066616C7365293B0A09090A090966756E6374696F6E2068616E646C6546696C65732829207B0A09092020646F63756D656E742E676574456C656D656E74427949642827696E7374616C6C666F726D27292E7375626D697428293B0A09097D0A09090A09092F2A77696E646F772E6164644576656E744C697374656E657228274D696E696D614576656E74272C2066756E6374696F6E2865767429207B0A0909096966286576742E64657461696C2E6576656E74203D3D2022636F6E6E656374656422297B0A09200909094D696E696D612E7574696C2E73657455494428224D696E6948554222293B0A092009090A0909097D656C7365206966286576742E64657461696C2E6576656E74203D3D20226E6577626C6F636B22297B7D0A09202020207D293B0A09094D696E696D612E696E697428293B2A2F0A097D293B0A090A0A0966756E6374696F6E20696E7374616C6C4441505028297B0A09092F2F4F70656E206120").getData();
	//1000 - 2000
	HEXDATA[1] = new MiniData("0xgetData();
	//2000 - 3000
	HEXDATA[2] = new MiniData("0xgetData();
	//3000 - 3009
	HEXDATA[3] = new MiniData("0x0A0A3C2F68746D6C3E").getData();
	}

			public static byte[] returnData() throws IOException {
				if(FINAL_ARRAY == null) {
					ByteArrayOutputStream baos = new ByteArrayOutputStream();
					for(int i=0;i<HEXNUM;i++) {
						baos.write(HEXDATA[i]);
					}
					baos.flush();
					FINAL_ARRAY = baos.toByteArray();	
				}
			    return FINAL_ARRAY;
			}
}
